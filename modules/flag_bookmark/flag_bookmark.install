<?php

/**
 * @file
 * The Flag Bookmark module install hooks.
 */

/**
 * Implements hook_enable().
 *
 * We create the demonstration flag on enable, so hook implementations in flag
 * module will fire correctly, as the APIs are not available on install.
 */
function flag_bookmark_enable() {
  // Load the flag API in case we want to use it when enabling.
  include_once backdrop_get_path('module', 'flag') . '/flag.module';

  if (!flag_get_flags()) {
    // Install a demonstration flag only if no flag exists. This is to prevent
    // a case where a disables and enables the module, and the demonstration
    // flag is overwritten or re-created.
    $flag = flag_flag::factory_by_entity_type('node');
    $configuration = array(
      'name' => 'bookmarks',
      'global' => 0,
      'show_in_links' => array(
        'full' => 1,
        'teaser' => 1,
      ),
      'show_on_form' => 1,
      // The following UI labels aren't wrapped in t() because they are written
      // to the DB in English. They are passed to t() later, thus allowing for
      // multilingual sites.
      'title' => 'Bookmarks',
      'flag_short' => 'Bookmark this',
      'flag_long' => 'Add this post to your bookmarks',
      'flag_message' => 'This post has been added to your bookmarks',
      'unflag_short' => 'Unbookmark this',
      'unflag_long' => 'Remove this post from your bookmarks',
      'unflag_message' => 'This post has been removed from your bookmarks',
      'types' => _flag_bookmark_install_get_suggested_node_types(),
    );
    $flag->form_input($configuration);
    $flag->save();

    // Clear the flag cache so the new permission is seen by core.
    backdrop_static_reset('flag_get_flags');

    // Grant permissions.
    $permissions = array('flag bookmarks', 'unflag bookmarks');
    user_role_grant_permissions(BACKDROP_AUTHENTICATED_ROLE, $permissions);
  }
}

/**
 * Implements hook_uninstall().
 */
function flag_bookmark_uninstall() {
  // Remove default, un-modified views.
  foreach (array('flag_bookmarks', 'flag_bookmarks_tab') as $view) {
    $config = config('views.view.' . $view);
    // Only update if view isn't overridden (VIEWS_STORAGE_OVERRIDE).
    if ($config->get('storage') != 2) {
      $config->delete();
    }
  }
}

/**
 * Returns some node types to which the demonstration 'bookmarks' flag will
 * apply.
 */
function _flag_bookmark_install_get_suggested_node_types() {
  $preferred = array('post', 'story', 'page', 'blog');
  $existing = array_intersect($preferred, array_keys(node_type_get_types()));
  if (!$existing) {
    // As a last resort, take the first preference.
    return array($preferred[0]);
  }
  return $existing;
}

/**
 * Install two default views.
 */
function flag_bookmark_update_1000() {
  $config = config('views.view.flag_bookmarks_tab');
  if ($config->isNew()) {
    $config->setData(
      array (
        'name' => 'flag_bookmarks_tab',
        'description' => 'Provides a tab on all users\' profile pages containing bookmarks for that user.',
        'tag' => 'flag',
        'disabled' => false,
        'base_table' => 'node',
        'human_name' => 'Flag bookmarks tab',
        'core' => 0,
        'display' => array(
          'default' => array(
            'display_title' => 'Defaults',
            'display_plugin' => 'default',
            'display_options' => array(
              'query' => array(
                'type' => 'views_query',
                'options' => array(
                ),
              ),
              'title' => 'User bookmarks',
              'use_more_always' => false,
              'access' => array(
                'type' => 'perm',
                'perm' => 'flag bookmarks',
              ),
              'cache' => array(
                'type' => 'none',
              ),
              'exposed_form' => array(
                'type' => 'basic',
              ),
              'pager' => array(
                'type' => 'full',
                'options' => array(
                  'items_per_page' => '25',
                ),
              ),
              'style_plugin' => 'table',
              'style_options' => array(
                'grouping' => '',
                'columns' => array(
                  'type' => 'type',
                  'title' => 'title',
                  'name' => 'name',
                  'comment_count' => 'comment_count',
                  'last_comment_timestamp' => 'last_comment_timestamp',
                ),
                'default' => 'last_comment_timestamp',
                'info' => array(
                  'type' => array(
                    'sortable' => true,
                  ),
                  'title' => array(
                    'sortable' => true,
                  ),
                  'name' => array(
                    'sortable' => true,
                  ),
                  'comment_count' => array(
                    'sortable' => true,
                  ),
                  'last_comment_timestamp' => array(
                    'sortable' => true,
                  ),
                ),
                'override' => false,
                'sticky' => true,
                'order' => 'desc',
              ),
              'empty' => array(
                'text' => array(
                  'id' => 'area',
                  'table' => 'views',
                  'field' => 'area',
                  'content' => 'This user has not yet bookmarked any content.',
                  'format' => 'plain_text',
                ),
              ),
              'relationships' => array(
                'flag_content_rel' => array(
                  'id' => 'flag_content_rel',
                  'table' => 'node',
                  'field' => 'flag_content_rel',
                  'label' => 'bookmarks',
                  'flag' => 'bookmarks',
                  'user_scope' => 'any',
                ),
                'uid_1' => array(
                  'id' => 'uid_1',
                  'table' => 'node',
                  'field' => 'uid',
                ),
                'uid' => array(
                  'id' => 'uid',
                  'table' => 'flagging',
                  'field' => 'uid',
                  'relationship' => 'flag_content_rel',
                  'label' => 'bookmarks_user',
                  'required' => true,
                ),
              ),
              'fields' => array(
                'type' => array(
                  'id' => 'type',
                  'table' => 'node',
                  'field' => 'type',
                ),
                'title' => array(
                  'id' => 'title',
                  'table' => 'node',
                  'field' => 'title',
                ),
                'name' => array(
                  'id' => 'name',
                  'table' => 'users',
                  'field' => 'name',
                  'relationship' => 'uid_1',
                  'label' => 'Author',
                ),
                'comment_count' => array(
                  'id' => 'comment_count',
                  'table' => 'node_comment_statistics',
                  'field' => 'comment_count',
                  'label' => 'Replies',
                ),
                'last_comment_timestamp' => array(
                  'id' => 'last_comment_timestamp',
                  'table' => 'node_comment_statistics',
                  'field' => 'last_comment_timestamp',
                  'label' => 'Last Post',
                ),
              ),
              'arguments' => array(
                'uid' => array(
                  'id' => 'uid',
                  'table' => 'users',
                  'field' => 'uid',
                  'relationship' => 'uid',
                  'default_action' => 'empty',
                  'exception' => array(
                    'value' => '',
                  ),
                  'title_enable' => true,
                  'title' => '%1\'s bookmarks',
                  'default_argument_type' => 'fixed',
                  'summary' => array(
                    'format' => 'default_summary',
                  ),
                  'specify_validation' => true,
                  'validate' => array(
                    'type' => 'flag_bookmark_plugin_owner_perm',
                  ),
                ),
              ),
              'filters' => array(
                'status' => array(
                  'id' => 'status',
                  'table' => 'node',
                  'field' => 'status',
                  'value' => 1,
                  'group' => '0',
                  'expose' => array(
                    'operator' => false,
                  ),
                ),
              ),
            ),
          ),
          'page' => array(
            'display_title' => 'Page',
            'display_plugin' => 'page',
            'display_options' => array(
              'query' => array(
                'type' => 'views_query',
                'options' => array(
                ),
              ),
              'path' => 'user/%/bookmarks',
              'menu' => array(
                'type' => 'tab',
                'title' => 'Bookmarks',
                'weight' => '0',
              ),
            ),
          ),
        ),
      )
    );
    $config->save();
  }

  $config = config('views.view.flag_bookmarks');
  if ($config->isNew()) {
    $config->setData(
      array(
        'name' => 'flag_bookmarks',
        'description' => 'A page listing the current user\'s bookmarks at /bookmarks.',
        'tag' => 'flag',
        'disabled' => false,
        'base_table' => 'node',
        'human_name' => 'Flag bookmarks',
        'core' => 0,
        'display' => array(
          'default' => array(
            'display_title' => 'Defaults',
            'display_plugin' => 'default',
            'display_options' => array(
              'query' => array(
                'type' => 'views_query',
                'options' => array(
                ),
              ),
              'title' => 'My bookmarks',
              'use_more_always' => false,
              'access' => array(
                'type' => 'perm',
                'perm' => 'flag bookmarks',
              ),
              'cache' => array(
                'type' => 'none',
              ),
              'exposed_form' => array(
                'type' => 'basic',
              ),
              'pager' => array(
                'type' => 'full',
                'options' => array(
                  'items_per_page' => '25',
                ),
              ),
              'style_plugin' => 'table',
              'style_options' => array(
                'grouping' => '',
                'columns' => array(
                  'type' => 'type',
                  'title' => 'title',
                  'name' => 'name',
                  'comment_count' => 'comment_count',
                  'last_comment_timestamp' => 'last_comment_timestamp',
                  'ops' => 'ops',
                ),
                'default' => 'last_comment_timestamp',
                'info' => array(
                  'type' => array(
                    'sortable' => true,
                  ),
                  'title' => array(
                    'sortable' => true,
                  ),
                  'name' => array(
                    'sortable' => true,
                  ),
                  'comment_count' => array(
                    'sortable' => true,
                  ),
                  'last_comment_timestamp' => array(
                    'sortable' => true,
                  ),
                ),
                'override' => false,
                'sticky' => true,
                'order' => 'desc',
              ),
              'empty' => array(
                'text' => array(
                  'id' => 'area',
                  'table' => 'views',
                  'field' => 'area',
                  'content' => 'You have not yet bookmarked any content. Click the "Bookmark this" link when viewing a piece of content to add it to this list.',
                  'format' => 'plain_text',
                ),
              ),
              'relationships' => array(
                'flag_content_rel' => array(
                  'id' => 'flag_content_rel',
                  'table' => 'node',
                  'field' => 'flag_content_rel',
                  'label' => 'bookmarks',
                  'flag' => 'bookmarks',
                ),
                'uid_1' => array(
                  'id' => 'uid_1',
                  'table' => 'node',
                  'field' => 'uid',
                ),
              ),
              'fields' => array(
                'type' => array(
                  'id' => 'type',
                  'table' => 'node',
                  'field' => 'type',
                ),
                'title' => array(
                  'id' => 'title',
                  'table' => 'node',
                  'field' => 'title',
                ),
                'name' => array(
                  'id' => 'name',
                  'table' => 'users',
                  'field' => 'name',
                  'relationship' => 'uid_1',
                  'label' => 'Author',
                ),
                'comment_count' => array(
                  'id' => 'comment_count',
                  'table' => 'node_comment_statistics',
                  'field' => 'comment_count',
                  'label' => 'Replies',
                ),
                'last_comment_timestamp' => array(
                  'id' => 'last_comment_timestamp',
                  'table' => 'node_comment_statistics',
                  'field' => 'last_comment_timestamp',
                  'label' => 'Last Post',
                ),
                'ops' => array(
                  'id' => 'ops',
                  'table' => 'flagging',
                  'field' => 'ops',
                  'relationship' => 'flag_content_rel',
                  'label' => 'Ops',
                ),
              ),
              'filters' => array(
                'status' => array(
                  'id' => 'status',
                  'table' => 'node',
                  'field' => 'status',
                  'value' => 1,
                  'group' => '0',
                  'expose' => array(
                    'operator' => false,
                  ),
                ),
              ),
            ),
          ),
          'page' => array(
            'display_title' => 'Page',
            'display_plugin' => 'page',
            'display_options' => array(
              'query' => array(
                'type' => 'views_query',
                'options' => array(
                ),
              ),
              'path' => 'bookmarks',
              'menu' => array(
                'type' => 'normal',
                'title' => 'My bookmarks',
                'weight' => '0',
              ),
            ),
          ),
        ),
      )
    );
    $config->save();
  }
}

/**
 * Fix breadcrumb for bookmarks tab.
 */
function flag_bookmark_update_1001() {
  $config = config('views.view.flag_bookmarks_tab');
  $config->set('core', '1.0');
  $config->set('display.default.display_options.arguments.uid.exception.value', '%1');
  $config->save();
}
